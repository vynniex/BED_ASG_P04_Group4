{
  "swagger": "2.0",
  "info": {
    "title": "BED Assg API",
    "description": "Medical Care For Seniors API",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/medications": {
      "post": {
        "tags": [
          "Medications"
        ],
        "description": "Create a new medication record",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The medication data to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "medicine_name": {
                  "type": "string",
                  "example": "Aspirin"
                },
                "purpose": {
                  "type": "string",
                  "example": "Pain Relief"
                },
                "per_day": {
                  "type": "integer",
                  "example": 2
                },
                "food_timing": {
                  "type": "string",
                  "example": "after",
                  "enum": [
                    "before",
                    "after"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict - Medicine already exists"
          }
        }
      },
      "get": {
        "tags": [
          "Medications"
        ],
        "description": "Get all of the logged-in user's medicine records",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/medications/id/{medId}": {
      "get": {
        "tags": [
          "Medications"
        ],
        "description": "Get a single medicine record by its ID",
        "parameters": [
          {
            "name": "medId",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Medications"
        ],
        "description": "Update an existing medicine record by its ID",
        "parameters": [
          {
            "name": "medId",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The medication data to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "medicine_name": {
                  "type": "string",
                  "example": "Ibuprofen"
                },
                "purpose": {
                  "type": "string",
                  "example": "Headache Relief"
                },
                "per_day": {
                  "type": "integer",
                  "example": 3
                },
                "food_timing": {
                  "type": "string",
                  "example": "after",
                  "enum": [
                    "before",
                    "after"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Medications"
        ],
        "description": "Delete a medicine record by its ID",
        "parameters": [
          {
            "name": "medId",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/users/appointments": {
      "get": {
        "tags": ["Appointments"],
        "description": "Get all Appointments by User",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/appointments/{id}": {
      "get": {
        "tags": ["Appointments"],
        "description": "Get Appointment info by appointmentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/appointments": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Create new appointment",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointmentDate": {
                  "example": "2025-09-15"
                },
                "appointmentTime": {
                  "example": "11:00AM"
                },
                "clinic": {
                  "example": "Punggol Polyclinic"
                },
                "reason": {
                  "example": "General Consultation"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Appointment Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/appointments/{id}": {
      "delete": {
        "tags": ["Appointments"],
        "description": "Delete appointments by appointmentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Appointment deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Appointments"],
        "description": "Update existing appointment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointment_date": {
                  "example": "2025-09-15"
                },
                "appointment_time": {
                  "example": "11:00AM"
                },
                "clinic": {
                  "example": "Punggol Polyclinic"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/appointments/verify": {
      "post": {
        "tags": ["Appointments"],
        "description": "Verify using NRIC",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nric": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nric": {
                  "example": "S6212345F"
                },
                "fullName": {
                  "example": "Tay Bee Hua"
                },
                "password": {
                  "example": "password3"
                },
                "email": {
                  "example": "bee.hua@gmail.com"
                },
                "contact": {
                  "example": "95783124"
                },
                "dob": {
                  "example": "1962-09-09"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User account Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": ["User"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "description": "Update user's details",
        "parameters":[
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fullName": {
                  "example": "BOB TAN"
                },
                "email": {
                  "example": "bob@gmail.com"
                },
                "contact": {
                  "example": "9001123"
                },
                "dob": {
                  "example": "1950-02-28"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "delete": {
        "tags": ["User"],
        "description": "Delete user account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - User acccount deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/records": {
      "get": {
        "tags": ["Records"],
        "description": "Get all medical records by user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Records"],
        "description": "Create medical records for user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/records/{id}": {
      "get": {
        "tags": ["Records"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Records"],
        "description": "update medical records",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Records"],
        "description": "delete medical records by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications": {
      "post": {
        "tags": ["Notifications"],
        "description": "create notifications ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reminderType": {
                  "example": "any"
                },
                "reminderTitle": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "date": {
                  "example": "any"
                },
                "time": {
                  "example": "any"
                },
                "frequency": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": ["Notifications"],
        "description": "Get All Notifications by user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "tags": ["Notifications"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Notifications"],
        "description": "Update notifications details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reminderType": {
                  "example": "any"
                },
                "reminderTitle": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "date": {
                  "example": "any"
                },
                "time": {
                  "example": "any"
                },
                "frequency": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Notifications"],
        "description": "Delete Notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}